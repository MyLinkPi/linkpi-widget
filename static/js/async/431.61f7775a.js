"use strict";(self.webpackChunk_linkpi_docs=self.webpackChunk_linkpi_docs||[]).push([["431"],{611:function(e,n,i){i.r(n),i.d(n,{default:function(){return c}});var r=i(1549),t=i(6603);function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",pre:"pre",code:"code",ol:"ol",li:"li",strong:"strong"},(0,t.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"react-组件",children:["React 组件",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#react-组件",children:"#"})]}),"\n",(0,r.jsxs)(n.h2,{id:"widgetpreview",children:["WidgetPreview",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#widgetpreview",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"用于预览组件的展示效果。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { WidgetPreview } from '@mylinkpi/widget-react'\n\ntype Props = {\n  // 组件的配置类型\n}\n\nconst Preview: WidgetPreview<Props> = () => {\n  return (\n    <div>\n      预览内容\n    </div>\n  )\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"widgetrender",children:["WidgetRender",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#widgetrender",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"用于渲染组件的实际内容。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { WidgetRender } from '@mylinkpi/widget-react'\n\ntype Props = {\n  // 组件的配置类型\n}\n\nconst Render: WidgetRender<Props> = () => {\n  return (\n    <div>\n      渲染内容\n    </div>\n  )\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"widgetsetting",children:["WidgetSetting",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#widgetsetting",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"用于配置组件的设置面板。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { WidgetSetting } from '@mylinkpi/widget-react'\n\ntype Props = {\n  // 组件的配置类型\n}\n\nconst Setting: WidgetSetting<Props> = () => {\n  return (\n    <div>\n      设置面板内容\n    </div>\n  )\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"组件生命周期",children:["组件生命周期",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件生命周期",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"每个组件都有三个主要的展示阶段："}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"预览阶段"}),"（WidgetPreview）：在组件选择或布局编辑时展示"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"设置阶段"}),"（WidgetSetting）：在配置组件属性时展示"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"渲染阶段"}),"（WidgetRender）：在最终页面中展示"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"每个阶段的组件都可以访问当前的配置数据和上下文，并通过相应的 Hooks 获取更多功能。"})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}let c=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["api%2Freact%2Fcomponents.md"]={toc:[{text:"WidgetPreview",id:"widgetpreview",depth:2},{text:"WidgetRender",id:"widgetrender",depth:2},{text:"WidgetSetting",id:"widgetsetting",depth:2},{text:"组件生命周期",id:"组件生命周期",depth:2}],title:"React 组件",headingTitle:"React 组件",frontmatter:{}}}}]);